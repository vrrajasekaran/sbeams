
Notes installing the SBEAMS - Proteomics modules
$Id$


-------------------------------------------------------------------------------
1) Software Dependencies

You must first install the SBEAMS Core.  See the separate installation
notes on how to accomplish that.

The following Perl Modules often not found on a standard UNIX/Linux
setup are required to successfully use SBEAMS - Proteomics (in addition
to the dependencies for the SBEAMS Core).

PDL                  Perl Data Language - available from CPAN
PDL::Graphics::PGPLOT
PDL::PGLOT

---------------
The following non-Perl software is required:

PGPLOT              (required by PDL::PGPLOT)


-------------------------------------------------------------------------------
2) Installation Location

SBEAMS is designed to live entirely in the "htdocs" area of your Apache
web server.  For the remainder of this installation, it will be assumed
that your installation is configured like this:
  servername: db
  DocumentRoot: /local/www/html
  Primary location: directly located in DocumentRoot,
                   /local/www/html/sbeams  --> http:/db/sbeams/
  Development location: In a dev1 tree starting in the DocumentRoot,
                   /local/www/html/dev1/sbeams  -> http:/db/dev1/sbeams/

All modules live in the same area and should be unpacked into the
main SBEAMS area.

Set up the following sym links:

cd /local/www/html
cd dev1
cd sbeams
ln -s ../share/load_biosequence_set.pl lib/scripts/Proteomics/load_biosequence_set.pl


-------------------------------------------------------------------------------
3) Create and populate the database

It is assumed that you have already created and tested your SBEAMS Core
database.  You may either create a separate database for the Proteomics
database or you can put everything in the same database.

Note that some
database engines may not permit cross-database queries in which case your
may NOT use separate databases.  If you do use separate databases, you
may not be able to enforce referencial itegrety between tables in the
different databases.  This may or may not be a significant concern.

- If you decide on a separate database, create it and within it,
  create users "sbeams" and "sbeamsro" as a read/write
  account and a read-only account, respectively.

- Generate the appropriate schema for your type(s) of database:

setenv SBEAMS /local/html/dev1/sbeams
cd $SBEAMS/lib/scripts/Core

foreach dbtype ( mssql mysql pgsql oracle )
  ./generate_schema.pl \
    --table_prop ../../conf/Proteomics/Proteomics_table_property.txt \
    --table_col ../../conf/Proteomics/Proteomics_table_column.txt \
    --schema_file ../../sql/Proteomics/Proteomics \
    --destination_type $dbtype
end


- Verify that the SQL CREATE and DROP statements have been correctly
  generated in $SBEAMS/lib/sql/Proteomics/

- Execute the statements to create and populate the database with some
  bare bones data:

SQL Server Example:

To CREATE and POPLULATE:
sqsh -i $SBEAMS/lib/sql/Proteomics/Proteomics_CREATETABLES.mssql -D sbeamsdev
sqsh -i $SBEAMS/lib/sql/Proteomics/Proteomics_POPULATE.mssql -D sbeamsdev
sqsh -i $SBEAMS/lib/sql/Proteomics/Proteomics_CREATECONSTRAINTS.mssql -D sbeamsdev

To DROP:
sqsh -i $SBEAMS/lib/sql/Proteomics/Proteomics_DROPCONSTRAINTS.mssql -D sbeamsdev
sqsh -i $SBEAMS/lib/sql/Proteomics/Proteomics_DROPTABLES.mssql -D sbeamsdev

Note that the Proteomics_POPULATE.mssql is not autogenerated and should
probably work for all flavors of database


-------------------------------------------------------------------------------
4) Edit the SBEAMS Configuration files

setenv SBEAMS /local/html/dev1/sbeams

cd $SBEAMS/lib/conf
edit SBEAMS.conf as appropriate for the new Proteomics modules
The defaults may be fine.  Specifically:
DBPREFIX{Proteomics}    = proteomics.dbo.
RAW_DATA_DIR{Proteomics} = /net/db/projects/proteomics/data


-------------------------------------------------------------------------------
5) Populate the driver tables

cd $SBEAMS/lib/scripts/Core
set CONFDIR = "../../conf"
./update_driver_tables.pl $CONFDIR/Proteomics/Proteomics_table_property.txt
./update_driver_tables.pl $CONFDIR/Proteomics/Proteomics_table_column.txt

If this doesn't work.  Do not proceed, debug first.

Now that the Proteomics driver tables are loaded, you should be able to
go to the web site again and click on SBEAMS - Proteomics and explore the
tables.  They're all going to be empty, but you shouldn't get any errors,
just empty resultsets.

If this doesn't work.  Do not proceed, debug first.


-------------------------------------------------------------------------------
6) Add groups

Log in via the web interface and add two work groups:
[SBEAMS Home] [Admin] [Manage Work Groups] [Add Work Group]
Add entries for (exacly as shown!):
  Proteomics_user
  Proteomics_admin
(Note that after doing the first, you can click [Back] and edit and
add another.)

Proteomics_admin has privilege over all tables in the Proteomics
module, while the Proteomics_user only has access to certain tables
and may often not modify other users records.

Now go to [Manage User-Group Associations] and add yourself and whoever
else to these groups as appropriate.

Now set up the table group securities:
  rowprivate - Proteomics_user - data_writer
  rowprivate - Proteomics_admin - data_writer
  project - Proteomics_user - data_writer
  project - Proteomics_admin - data_modifier
  Proteomics_infrastructure - Proteomics_admin - data_modifier
  Proteomics_user - Proteomics_user - data_groupmodifier
  Proteomics_user - Proteomics_admin - data_modifier




-------------------------------------------------------------------------------
7) Add some sample data

Add a project:

- Switch to the Proteomics_user group by clicking [CHANGE] in the upper
  right hand corner, selecting the Proteomics_user group and [UPDATE]
- Click [Projects] [Add Project] and add an appropriate project.  Required
  fields are in red.  If you don't have a budget number, enter NA.


Add an experiment:

- Click [Experiments] [Add Experiment]
- Fill in the appropriate information and [INSERT]


Register a biosequence_set:

A biosequence_set is a list of proteins, genes, orfs, etc., sometimes called
a "sequence database".  Relevant for the Proteomics module are the
"sequence databases" you run SEQUEST against.

Click [Core Management: BioSequenceSets] [Add BioSequence Set]
Fill in the appropriate information.  Make sure that the set_path points
to the location of FASTA file that is SEQUEST searched against.
[INSERT] that record.


-------------------------------------------------------------------------------
8) Test the Protoemics command line functiality

cd $SBEAMS/lib/scripts/Proteomics

./load_biosequence_set.pl --check

./load_proteomics_experiment.pl --list

These two programs should list the entries for the BioSequence Set and
Experiment you have loaded above.

Now try loading a biosequence set:

./load_biosequence_set.pl --set_tag YeastORF

This should load the biosequence set.
If this doesn't work.  Do not proceed, debug first.





