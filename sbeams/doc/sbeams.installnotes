
Notes installing a new SBEAMS site
$Id$

This document describes how to install a new SBEAMS site.


Terms:
 - SBEAMS: Systems Biology Extensible Analysis Management System
 - SBEAMS site: an independant installation of SBEAMS with its own core tables
 - SBEAMS instance: a version of source code, often for development, which
   shares the core tables with other instances


-------------------------------------------------------------------------------
1) Software Dependencies

The following software programs are required to run SBEAMS:
- Apache or similar web server software
- PHP (There are a few PHP pages, but nothing elaborate.  As long as basic
       PHP works with the web server, this should be fine)
- Perl (probably anything greater than version 5.0 will work)
- A relational database engine.  This software was delveloped with SQL
  Server.  Products from either Microsoft or Sybase should work right away.
  Attempts has been made to make this software operable with other 
  engines such as Oracle, MySQL, and PostgreSQL, however further development
  is required to acheive this fully.

The following Perl Modules often not found on a standard UNIX/Linux
setup are required before installation can begin.  Version numbers are
for what is used for development; older or newer versions may work:

DBI
Data-ShowTable-3.3a  (specially modified version by Deutsch and included)
DBD-Sybase-0.94      (assuming Sybase or MS SQL Server is back end)
DBD-????             (if you are using a different type of back end RDBMS)
Crypt-CBC-1.25
Crypt-IDEA-1.01
Authen-Smb-0.91      (For Windows Domain Authentication instead of UNIX auth)
XML-Parser-2.29
GD-1.33              (GD-1.41 not yet tested but may work)
GDGraph-1.33a        (Modified to add the histogram subclass)
GDGraph-XY-0.92
GDTextUtil-0.82      (GDTextUtil-0.83 not yet tested but may work)


Additional common Perl modules are needed, but may not be on your system.
Should really write a little dependency checker program.  FIXME.

---------------
The following non-Perl software is required:

FreeTDS 0.60         (required by DBD-Sybase. Allows UNIX -> MSSQL/Sybase)
libgd                (required by GD Perl modules)

---------------
Certain modules (Proteomics) also require the following Perl modules:

Proteomics:
  PDL
  PDL::Graphics::PGPLOT


-------------------------------------------------------------------------------
2) Installation Location

SBEAMS is designed to live entirely in the "htdocs" area of your Apache
web server.  For the remainder of this installation, it will be assumed
that your installation is configured like this:
  servername: db
  DocumentRoot: /local/www/html
  Primary location: directly located in DocumentRoot,
                   /local/www/html/sbeams  --> http:/db/sbeams/
  Development location: In a dev1 tree starting in the DocumentRoot,
                   /local/www/html/dev1/sbeams  -> http:/db/dev1/sbeams/

There is typically significant ongoing development in an SBEAMS environment
and it is recommended that all development work be done in a devN area
which is then sync'ed with the primary area when changes are tested.  This
is so users can continue to use the stable version until new features have
passed testing.


-------------------------------------------------------------------------------
3) Configure Apache

Include in Apache's http.conf file the following execution permissions:

#------
<Location /sbeams/cgi>
    Options ExecCGI
    SetHandler cgi-script
</Location>

<Location /sbeams/lib>
    deny from all
</Location>

<Location /dev1/sbeams/cgi>
    Options ExecCGI
    SetHandler cgi-script
</Location>

<Location /dev1/sbeams/lib>
    deny from all
</Location>
#------


Retart the Apache server perhaps with something like:
  /etc/rc.d/init.d/httpd restart


-------------------------------------------------------------------------------
4) Upack files and set up misc directories and links

cd /local/www/html
mkdir dev1
cd dev1
tar -zxvf ~/sbeams-0.13.tar.gz

Create tmp directories and symlinks:
cd sbeams
  (for now, just create this directories for stuff to live in here, but
   it may be a good idea to make a sym link to another location since there
   could possibly be large amounts of data here)
mkdir data images/tmp tmp tmp/queries
chown a+rwx image/tmp tmp/queries
ln -s ../includes doc/includes
ln -s ../share/load_biosequence_set.pl lib/scripts/Proteomics/load_biosequence_set.pl

For now, make the main site point to dev1, but eventually when there is
parallel development and production usage, these should be separate trees
kept in sync with CVS or some other such tool.

cd ..
ln -s dev1/sbeams sbeams


-------------------------------------------------------------------------------
5) Edit the SBEAMS Configuration files

setenv SBEAMS /local/html/dev1/sbeams

cd $SBEAMS/lib/conf
cp SBEAMS.conf.template SBEAMS.conf
edit SBEAMS.conf to taste


-------------------------------------------------------------------------------
6) Create and populate the database

SBEAMS is being developed on SQL Server and should work quite easily
with either the Sybase or Microsoft versions.  Attempts are being made
to make it work equally well with DB2, Oracle, PostgreSQL, and MySQL;
this is not finished so please contribute to this effort if you can.

- First create a database called 'sbeams' or 'sbeamsdev' or similar

- Within it, create users "sbeams" and "sbeamsro" as a read/write
  account and a read-only account, respectively.

- Generate the appropriate schema for your type(s) of database:

setenv SBEAMS /local/html/dev1/sbeams
cd $SBEAMS/lib/scripts/Core

foreach dbtype ( mssql mysql pgsql )
  ./generate_schema.pl --table_prop ../../conf/Core/Core_table_property.txt \
  --table_col ../../conf/Core/Core_table_column.txt --schema_file \
  ../../sql/Core/Core --destination_type $dbtype
end


- Verify that the SQL CREATE and DROP statements have been correctly
  generated in $SBEAMS/lib/sql/Core/

- Edit the bottom of the POPULATE file to include your UNIX username
  edit $SBEAMS/lib/sql/Core/Core_POPULATE.mssql

- Execute the statements to create and populate the database with some
  bare bones data:

SQL Server Example:

To CREATE and POPLULATE:
sqsh -i $SBEAMS/lib/sql/Core/Core_CREATETABLES.mssql -D sbeamsdev
sqsh -i $SBEAMS/lib/sql/Core/Core_POPULATE.mssql -D sbeamsdev
sqsh -i $SBEAMS/lib/sql/Core/Core_CREATECONSTRAINTS.mssql -D sbeamsdev

To DROP:
sqsh -i $SBEAMS/lib/sql/Core/Core_DROPCONSTRAINTS.mssql -D sbeamsdev
sqsh -i $SBEAMS/lib/sql/Core/Core_DROPTABLES.mssql -D sbeamsdev


-----------------------
PostgreSQL Example:

To CREATE and POPLULATE:
psql -f $SBEAMS/lib/sql/Core/Core_CREATETABLES.pgsql sbeamsdev
psql -f $SBEAMS/lib/sql/Core/Core_POPULATE.mssql sbeamsdev
psql -f $SBEAMS/lib/sql/Core/Core_CREATECONSTRAINTS.pgsql sbeamsdev

To DROP:
psql -f $SBEAMS/lib/sql/Core/Core_DROPCONSTRAINTS.pgsql sbeamsdev
psql -f $SBEAMS/lib/sql/Core/Core_DROPTABLES.pgsql sbeamsdev


-------------------
MySQL Example:

To CREATE:
mysql -u sbeams -p -h mysql sbeamsdev < $SBEAMS/lib/sql/Core/Core_CREATETABLES.mysql

To POPULATE:
mysql -u sbeams -p -h mysql sbeamsdev < $SBEAMS/lib/sql/Core/Core_POPULATE.mssql

To DROP:
mysql -u sbeams -p -h mysql sbeamsdev < $SBEAMS/lib/sql/Core/Core_DROPTABLES.mysql
 or
mysql -u sbeams -p -h mysql -f sbeamsdev < $SBEAMS/lib/sql/Core/Core_DROP.mysql


You should now be able to log in via the web interface, either as the
"admin" account (password SBEAMSadm) or with the user account you added to
Core_POPULATE.mssql.  Test it by pointing a browser to the proper location
like:

http://db.localdomain.org/dev1/sbeams/

and going to login.  Don't try to run any of the modules yet.

If this doesn't work.  Do not proceed, debug first.

One possible problem you may find.  At present, the regular user account
expects there to be a UNIX NIS account with the same name present and
obtainable with `ypcat passwd`.  If you use a local /etc/passwd, a little
additional development will need to be done to accomodate this.


-------------------------------------------------------------------------------
7) Populate the driver tables

cd $SBEAMS/lib/scripts/Core
set CONFDIR = "../../conf"
./update_driver_tables.pl $CONFDIR/Core/Core_table_property.txt
./update_driver_tables.pl $CONFDIR/Core/Core_table_column.txt

If this doesn't work.  Do not proceed, debug first.

Now that the Core driver tables are loaded, you should be able to
go to the web site again and click on "Admin" and explore the
tables.

If this doesn't work.  Do not proceed, debug first.









