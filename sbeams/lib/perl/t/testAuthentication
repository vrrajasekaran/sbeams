#!/usr/local/bin/perl -w

use strict;
use Test::More tests => 6;
use lib '/net/dblocal/www/html/devDC/sbeams/lib/perl';

use constant BASE_URL => 'http://db.systemsbiology.net/devDC/sbeams';
#use constant BASE_URL => 'http://db.systemsbiology.net/sbeams';
use constant USERNAME => 'cytoscape';
use constant PASSWORD => 'cytoscape';

use CGI;
use SBEAMS::Connection qw( $log $q );
use SBEAMS::Connection::Settings;
use SBEAMS::Connection::Tables;
use SBEAMS::Connection::TableInfo;
use SBEAMS::Client;
use HTTP::Request::Common;
use HTTP::Cookies;
use LWP::UserAgent;
use Crypt::CBC;

# Global fun!
my ( $ua, $sbeams, $q, $sbeams_client );
my %auth = ( username => USERNAME, password => PASSWORD, login => 'yes' );

  
# Set up user agent and sbeams objects
ok( sbeams_connect(), 'sbeams connection' );
ok( fetch_cookie(), 'authenticated and stored cookies' );
ok( test_cookie(), 'Used cached cookie' );
ok( test_force_login(), 'Checking forced login with existing cookie' );
ok( test_force_with_auth(), 'Checking forced login without cookie' );
ok( test_cookie(), 'testing cookie cached with force' );


sub sbeams_connect {
  $sbeams = new SBEAMS::Connection;
}

sub test_force_login {
  my $response = $ua->get( BASE_URL . '/cgi/main.cgi?force_login=yes' );
  return ( $response->content() =~ /INPUT TYPE.*password.*NAME.*password/ ) ? 1 : 0; 
}

sub test_force_with_auth {
  my $response = $ua->post( BASE_URL . '/cgi/main.cgi?force_login=yes', {%auth, force_login => 'yes' } );
  return ( $response->content() =~ /INPUT TYPE.*password.*NAME.*password/ ) ? 1 : 0; 
}

sub test_cookie {
  my $response = $ua->get( BASE_URL . '/cgi/main.cgi' );
  return ( $response->status_line() =~ /200 OK/ ) ? 1 : 0; 
}

sub fetch_cookie {
  # Insert user of known permissions
  $ua = LWP::UserAgent->new( );
  
  my $time = time();
  $ua->cookie_jar( HTTP::Cookies->new( file => '/tmp/lwpcookies.txt', autosave => 1 ) );
  
  my $response = $ua->post( BASE_URL . '/cgi/main.cgi' , \%auth );
  
  return ( $ua->{cookie_jar} ) ? 1 : 0;
} 

END {
  breakdown();
} # End END

sub breakdown {
}


